<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label1.Text" xml:space="preserve">
    <value>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAA                       AAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        qJIA+gAAAABJRU5ErkJggg==
</value>
  </data>
</root>